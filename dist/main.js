(()=>{"use strict";const e=class{constructor(e){this.calc=e}execute(){return this}},t=class extends e{constructor(e){super(e),this.currentOperand=document.querySelector(".record-data-block"),this.prevOperand=document.querySelector(".prev-data-block")}execute(){this.currentOperand.textContent=this.calc.currentNum,this.prevOperand.textContent=`${this.calc.prevNum} ${this.calc.operation.sign}`}},r=class extends e{execute(){this.calc.currentNum=0,this.calc.prevNum="",this.calc.operation={sign:""}}},u=class{constructor(e){this.calculator=e}start(){const e=document.querySelector(".record-data-block");Number.isNaN(+e.textContent)||(this.calculator.executeCommand(this.calculator.operation)?new t(this.calculator).execute():(e.textContent="invalid operation",new r(this.calculator).execute()))}},c=class{constructor(e){this.num=e}execute(){return+this.num}undo(){return+this.num}};class n extends c{execute(e){return+this.num+ +e}undo(e){return+e-+this.num}}class s extends c{execute(e){return+this.num-+e}undo(e){return+e+ +this.num}}class a extends c{execute(e){return+this.num*+e}undo(e){return+e/+this.num}}class i extends c{execute(e){return+this.num/+e}undo(e){return+e*+this.num}}const o=class extends c{execute(e){return e*e}},m=class extends c{execute(e){return e*e*e}},l=class extends c{constructor(e){super(),this.num=e}execute(e){return this.num**e}},d=class extends c{execute(e){return 1==+e?1:e**.5}},x=class extends c{execute(e){return 1==+e?1:e**(1/3)}},h=class extends c{execute(e){return 1==+e||1==+this.num?1:this.num**(1/e)}},N=class extends c{execute(e){return+e<0?"invalid input":1!==e?e*this.execute(e-1):e}},p=class extends c{execute(e){return 1/e}},b=class extends c{execute(e){return 10**e}};class g{constructor(e=""){this.sign=e}static list={add:n,substract:s,mult:a,divide:i,"degree-y":l,"root-y":h,degree2:o,degree3:m,root2:d,root3:x,fact:N,inverse:p,tenDegreeX:b};create(e,t){const r=new(0,g.list[t])(e);return r.sign=this.sign,r}}const v=g,w=class extends e{execute(){this.calc.currentNum=0}},y=class extends e{execute(){this.calc.prevNum=this.calc.currentNum,this.calc.currentNum=""}},C=class extends e{execute(){this.calc.currentNum=""}},A=class extends e{execute(e){const t=document.querySelector(".record-data-block").textContent;if("."!==e||!t.includes(".")){if(""!==this.calc.currentNum&&""!==this.calc.prevNum&&void 0===this.calc.operation.execute)return this.calc.prevNum="",void(this.calc.currentNum=e);this.calc.currentNum+=e,"."!==e&&(this.calc.currentNum=Number(this.calc.currentNum))}}},f=new class{constructor(){this.currentNum=0,this.prevNum="",this.memory=new class{memNum=0;add(e){return this.memNum+=+e,this.memNum}substr(e){return this.memNum-=+e,this.memNum}recall(){return this.memNum}clear(){this.memNum=0}},this.operation={sign:""},this.history=[]}executeCommand(e){return""===this.currentNum&&(this.currentNum=this.prevNum),e.execute(this.currentNum)!==1/0&&!Number.isNaN(+e.execute(this.currentNum))&&(this.prevNum=e.execute(this.currentNum),this.currentNum=e.execute(this.currentNum),this.operation={sign:""},!0)}},q=document.querySelector(".m-btns"),k=document.querySelector(".btns");q.addEventListener("click",(e=>{const t=document.querySelector(".record-data-block"),r=document.querySelector(".mem-data-block");r.textContent="M",e.target.hasAttribute("data-memory-clear")&&(f.memory.clear(),r.textContent=""),e.target.hasAttribute("data-memory-add")&&f.memory.add(t.textContent),e.target.hasAttribute("data-memory-substr")&&f.memory.substr(t.textContent),e.target.hasAttribute("data-memory-recall")&&(t.textContent=f.memory.recall(),new A(f).execute(t.textContent))})),k.addEventListener("click",(e=>{if(e.target.hasAttribute("data-num")&&(new A(f).execute(e.target.textContent),new t(f).execute()),e.target.hasAttribute("data-single-oper")&&(f.operation=(new v).create(f.currentNum,e.target.id),new u(f).start()),e.target.hasAttribute("data-pair-oper")){if(Number.isNaN(+document.querySelector(".record-data-block").textContent))return;if(void 0!==f.operation.execute)return f.executeCommand(f.operation),f.operation=new v(e.target.getAttribute("data-value")).create(f.prevNum,e.target.id),new C(f).execute(),void new t(f).execute();new y(f).execute(),f.operation=new v(e.target.getAttribute("data-value")).create(f.prevNum,e.target.id),new C(f).execute(),new t(f).execute()}if(e.target.hasAttribute("data-equal")){if(void 0===f.operation.execute)return;new u(f).start()}if(e.target.hasAttribute("data-percent")){const e=document.querySelector(".record-data-block");if(Number.isNaN(+e.textContent))return;f.currentNum=f.prevNum*(e.textContent/100),new t(f).execute()}if(e.target.hasAttribute("data-plus-minus")){const e=document.querySelector(".record-data-block");if(Number.isNaN(+e.textContent))return;f.currentNum=-Number(e.textContent),new t(f).execute()}e.target.hasAttribute("data-clear-all")&&(new r(f).execute(),new t(f).execute()),e.target.hasAttribute("data-clear-entry")&&(new w(f).execute(),new t(f).execute())}))})();